 dddd1 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd1, perl=TRUE) 
 dddd2 <- row.names(scales)
 dddd2 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd2, perl=TRUE) 
 diffff <- setdiff(dddd2, dddd1)
 print(diffff)
 dddd1
 dddd2
dddd1 <- row.names(torrance_percentil)
dddd1 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd1, perl=TRUE) 
dddd2 <- row.names(scales)
dddd2 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd2, perl=TRUE) 
diffff <- setdiff(dddd2, dddd1)
print(diffff)
 
dddd1
dddd2
dddd1 <- row.names(torrance_percentil)
dddd1 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd1, perl=TRUE) 
dddd2 <- row.names(scales)
dddd2 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd2, perl=TRUE) 
diffff <- setdiff(dddd1, dddd2)
print(diffff)
 
dddd1
dddd2
 dddd1 <- row.names(torrance_percentil)
 dddd1 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd1, perl=TRUE) 
 dddd2 <- row.names(scales)
 dddd2 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd2, perl=TRUE) 
 diffff <- setdiff(dddd1, dddd2)
 print(diffff)
 dddd1 <- row.names(torrance_percentil)
 dddd1 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd1, perl=TRUE) 
 dddd2 <- row.names(scales)
 dddd2 <- gsub('.*(\\d{4})\\s*$', '\\1', dddd2, perl=TRUE) 
 diffff <- setdiff(dddd2, dddd1)
 print(diffff)
 dddd1
 dddd2
?setdiff
?intersect
 intersect(dddd2, dddd1)
 setdiff(dddd1, dddd2)
 diffff <- setdiff(dddd2, dddd1)
 print(diffff)
 dddd1
row.names(torrance)
row.names(torrance_percentil)
length(row.names(scales))
length(row.names(raven))
length(row.names(torrance_percentil))
length(items[, 1])
length(raven_csv_original$identificador)
length(torrance_csv_original$identificador)
 length(items[, 1])
 length(raven_csv_original$identificador)
 length(torrance_csv_original$identificador)
source('~/p/tmfs/categoric.R')
 complete_dataset <- iris
 grouping_column1 <- 'Species'
 summarized_stats <- complete_dataset %>%
 response_column <- 'Sepal.Length'
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
data(iris)
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
source('~/p/tmfs/categoric.R')
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
attach(iris)
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
source('~/p/tmfs/categoric.R')
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
source('~/p/tmfs/categoric.R')
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
source('~/p/tmfs/categoric.R')
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
source('~/p/tmfs/categoric.R')
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
source('~/p/tmfs/categoric.R')
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
?labs
?geom_col
source('~/p/tmfs/categoric.R')
source('~/p/tmfs/categoric.R')
 png("/a/zzzz.png");
one_way_anova_graph(iris, 'Sepal.Length', 'Species')
 dev.off();
source('~/p/tmfs/categoric.R')
ls()
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 cbq(mfs)
sapply(items, function(x) sum(is.na(x)))
sum(sapply(items, function(x) sum(is.na(x))))
sum(sapply(items, function(x) sum(is.na(x))))
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
outlaiers_before_impute
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 unused_items <- setdiff(names(items), unlist(sapply(separated_subdim, function(x) unlist(x[[2]]))))
#=========================================
#=========================================
#=========================================
#=========================================
#EXTRACT MEMBERSHIPS TO BROAD AND SUBDIMENSIONS
processing_factors_spec <- readLines('xscales.spec')
pattern0 <- '\\s'
replacement0 <- ''
text0 <- processing_factors_spec
text0 <- gsub(pattern0, replacement0, text0, perl=TRUE)
text0 <- strsplit(text0, split='=~')
subdimension_split <- function(splitee)
{
separated_dimensions <- strsplit(splitee[[2]], split='\\+')
return(list(splitee[[1]], unlist(separated_dimensions)))
}
broad_dimensions <- lapply(text0, subdimension_split)
separated_dimensions <- lapply(text0, subdimension_split)
 processing_factors_spec <- readLines('xscales.spec')
 pattern0 <- '\\s'
 replacement0 <- ''
 text0 <- processing_factors_spec
 text0 <- gsub(pattern0, replacement0, text0, perl=TRUE)
 text0 <- strsplit(text0, split='=~')
 subdimension_split <- function(splitee)
 separated_dimensions <- strsplit(splitee[[2]], split='\\+')
 return(list(splitee[[1]], unlist(separated_dimensions)))
subdimension_split <- function(splitee)
{
separated_dimensions <- strsplit(splitee[[2]], split='\\+')
return(list(splitee[[1]], unlist(separated_dimensions)))
}
 broad_dimensions <- lapply(text0, subdimension_split)
 processing_factors_spec <- readLines('xscales.spec')
 processing_factors_spec <- readLines('~/p/psychometric/tttt/mfs/xscales.spec')
 pattern0 <- '\\s'
 replacement0 <- ''
 text0 <- processing_factors_spec
 text0 <- gsub(pattern0, replacement0, text0, perl=TRUE)
 text0 <- strsplit(text0, split='=~')
 subdimension_split <- function(splitee)
 separated_dimensions <- strsplit(splitee[[2]], split='\\+')
 return(list(splitee[[1]], unlist(separated_dimensions)))
subdimension_split <- function(splitee)
{
separated_dimensions <- strsplit(splitee[[2]], split='\\+')
return(list(splitee[[1]], unlist(separated_dimensions)))
}
 broad_dimensions <- lapply(text0, subdimension_split)
 separated_dimensions <- lapply(text0, subdimension_split)
 separated_subdim <- lapply(text0, subdimension_split)
 unused_items <- setdiff(names(items), unlist(sapply(separated_subdim, function(x) unlist(x[[2]]))))
 unused_items <- setdiff(names(items), unlist(sapply(separated_subdim, function(x) unlist(x[[2]]))))
unused_items
sum(sapply(items, function(x) sum(is.na(x))))
names(cbq)
names(items)
sum(sapply(items, function(x) sum(is.na(x))))
 unused_items
 unused_items <- c('cbq3', 'cbq33', 'cbq49')
 unused_items
 unused_items <- c('cbq3', 'cbq33', 'cbq49')
 items <- items[, !names(items) %in% unused_items]
names(items)
head(names(items), 55)
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 cbq(mfs)
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 cbq(mfs)
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 cbq(mfs)
items
 names(items
)
names(items)
head(names(items), 55)
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 cbq(mfs)
head(names(items), 55)
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 cbq(mfs)
sum(sapply(items, function(x) sum(is.na(x))))
sum(sapply(items, function(x) sum(is.na(x))))
 outlaiers_before_impute(mfs)
 outlaiers_before_impute(mfs, number_of_imputations = 1)
 outlaiers_before_impute(mfs, number_of_imputations = 1, maximum_iterations = 1)
 cbq(mfs)
 imputed_cbq(mfs, number_of_imputations = 1, maximum_iterations = 1)
#=========================================
#remove too many unanswered questions and participants from df
#=========================================
off20percent_dataset <- function(qunanswered_percentage = 20, punanswered_percentage = 20, dataset = items)
{
qtoo_many_unanswered_list <- show_questions_with_xpercent_unanswered(qunanswered_percentage)
ptoo_many_unanswered_list <- participants_with_xpercent_unanswered(punanswered_percentage)
return(dataset[!names(dataset) %in% ptoo_many_unanswered_list, !names(dataset) %in% qtoo_many_unanswered_list])
}
off20percent_dataset
off20percent_dataset()
#=========================================
#Identify qitems with too many unanswered questions
#=========================================
show_questions_with_xpercent_unanswered <- function(unanswered_percentage = 20)
{
thresh <- round(length(items[,1]) * unanswered_percentage / 100, digits = 0)
print(paste('COMPUTED PERCENT__', thresh))
unnum <- sapply(names(items), function(qname)
{
nasum <- sum(is.na(items[, qname]))
if(nasum > thresh) {print(paste(qname, '__Number of nonanwsers__', nasum)); return(qname)}
}
)
return(unlist(unnum))
}
#=========================================
#Identify participats with too many unanswereds
#=========================================
participants_with_xpercent_unanswered <- function(unanswered_percentage = 20)
{
thresh <- round(length(items[1,]) * unanswered_percentage / 100, digits = 0)
print(paste('COMPUTED PERCENT__', thresh))
unnum <- sapply(row.names(items), function(idparticipant)
{
nasum <- sum(is.na(items[idparticipant, ]))
if(nasum > thresh) {print(paste(idparticipant, '__Number of nonanwsers__', nasum)); return(idparticipant)}
}
)
return(unlist(unnum))
}
off20percent_dataset()
off20percent_dataset()
oooo <- off20percent_dataset()
 source('https://raw.githubusercontent.com/umontano/CBQ_comandos_SPSS_lab_ChyC/main/CBQ_comandosSPSS_lab_CHyC.R')
 cbq(mfs)
 torrance <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
torrance_totals <- torrance_csv_original %>%
remove_rownames %>% 
tibble::column_to_rownames(var='identificador') %>%
mutate_if(is.numeric, ~replace_na(.,0)) %>%
mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
mutate(fluidez=flui2 + flui3) %>%
mutate(elaboracion=elab1 + elab2 + elab3) %>%
mutate(flexibilidad=flex2 + flex3) %>%
mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
data.frame
 library(dplyr)
 library(rmarkdown)
torrance_totals <- torrance_csv_original %>%
remove_rownames %>% 
tibble::column_to_rownames(var='identificador') %>%
mutate_if(is.numeric, ~replace_na(.,0)) %>%
mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
mutate(fluidez=flui2 + flui3) %>%
mutate(elaboracion=elab1 + elab2 + elab3) %>%
mutate(flexibilidad=flex2 + flex3) %>%
mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
data.frame
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
torrance_totals <- torrance_csv_original %>%
remove_rownames %>% 
tibble::column_to_rownames(var='identificador') %>%
mutate_if(is.numeric, ~replace_na(.,0)) %>%
mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
mutate(fluidez=flui2 + flui3) %>%
mutate(elaboracion=elab1 + elab2 + elab3) %>%
mutate(flexibilidad=flex2 + flex3) %>%
mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
data.frame
library(dplyr)
library(rmarkdown)
pc_crea_median <- median(torrance_percentil$perc_creatividad)
torrance_groups_perc <- torrance_percentil %>%
mutate(median_grp = case_when(
perc_creatividad > pc_crea_median ~ 'g2above75',
TRUE ~ 'g1below75'
)) %>%
mutate(three_groups = case_when(
perc_creatividad <= 65 ~ 'g1bbibelow65',
perc_creatividad > 86 ~ 'g3above86',
TRUE 
~ 'g2mid66_85'
)) %>%
select(median_grp, three_groups)
#torrance_groups_perc$three_groups
torrance_groups_perc$median_grp
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
 torrance <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
 var_raven  <- c('columna_a', 'columna_ab', 'columna_b', 'puntaje', 'dx')
 raven <- read.csv('https://raw.githubusercontent.com/Laboratorio-CHyC/Temperament/main/ferserrano2022_raven.csv', header=TRUE)
 rownames(raven) <- raven$identificador
#==========================================
#CLEAN OUTLAIERS AND IMPUTE RAVEN DATA
#==========================================
rav_to_impute  <- raven[, var_raven]
rav_to_impute  <- data.frame(lapply(rav_to_impute, as.numeric))
raven_raw <- rav_to_impute
rav_to_impute <- identify_and_make_na_outlaiers(rav_to_impute)
rav_to_impute <- impute_any_dataset_mice(rav_to_impute)
#==========================================
#CONTINUE PROCESSIN NOT PRINTING
#==========================================
raven[, var_raven] <- list(NULL)
raven  <- cbind(raven, rav_to_impute)
#==========================================
#Attach the original dx variable to cleaned raven
#==========================================
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R')
raven_csv_original <- read.csv(raven_url)
raven$dx <- as.factor(raven_csv_original$dx)
 id_numbers_cbq <- gsub('\\d{4}$', '\\1', row.names(items), perl = TRUE)
id_numbers_cbq
 id_numbers_cbq <- gsub('.*(\\d{4})$', '\\1', row.names(items), perl = TRUE)
id_numbers_cbq
 id_numbers_raven <- gsub('.*(\\d{4})$', '\\1', row.names(raven), perl = TRUE)
 id_numbers_raven
 id_numbers_raven <- gsub('.*(\\d{4})$', '\\1', row.names(torrance), perl = TRUE)
 id_numbers_torrance <- gsub('.*(\\d{4})$', '\\1', row.names(torrance), perl = TRUE)
 id_numbers_cbq <- gsub('.*(\\d{4})$', '\\1', row.names(items), perl = TRUE)
 id_numbers_raven <- gsub('.*(\\d{4})$', '\\1', row.names(raven), perl = TRUE)
 id_numbers_torrance <- gsub('.*(\\d{4})$', '\\1', row.names(torrance), perl = TRUE)
 id_numbers_torrance
row.names(torrance)
names(torrance)
head(names(torrance))
 id_numbers_torrance <- gsub('.*(\\d{4})$', '\\1', row.names(torrance$identificador), perl = TRUE)
 id_numbers_torrance
torrance$identificador
 id_numbers_torrance <- gsub('.*(\\d{4})$', '\\1', torrance$identificador, perl = TRUE)
 id_numbers_torrance
 setdiff(id_numbers_cbq, id_numbers_torrance)
 setdiff(id_numbers_torrance, id_numbers_cbq)
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
 torrance_totals <- torrance_csv_original %>%
 remove_rownames %>% 
 tibble::column_to_rownames(var='identificador') %>%
 mutate_if(is.numeric, ~replace_na(.,0)) %>%
 mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
 mutate(fluidez=flui2 + flui3) %>%
 mutate(elaboracion=elab1 + elab2 + elab3) %>%
 mutate(flexibilidad=flex2 + flex3) %>%
 mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
 select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
 data.frame
 library(dplyr)
 library(rmarkdown)
 library(dplyr)
 library(rmarkdown)
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
 torrance_totals <- torrance_csv_original %>%
 remove_rownames %>% 
 tibble::column_to_rownames(var='identificador') %>%
 mutate_if(is.numeric, ~replace_na(.,0)) %>%
 mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
 mutate(fluidez=flui2 + flui3) %>%
 mutate(elaboracion=elab1 + elab2 + elab3) %>%
 mutate(flexibilidad=flex2 + flex3) %>%
 mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
 select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
 data.frame
torrance_totals <- torrance_csv_original %>%
remove_rownames %>% 
tibble::column_to_rownames(var='identificador') %>%
mutate_if(is.numeric, ~replace_na(.,0)) %>%
mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
mutate(fluidez=flui2 + flui3) %>%
mutate(elaboracion=elab1 + elab2 + elab3) %>%
mutate(flexibilidad=flex2 + flex3) %>%
mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
data.frame
??remove_rownames
 library(tibble)
 library(dplyr)
 library(rmarkdown)
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
torrance_totals <- torrance_csv_original %>%
remove_rownames %>% 
tibble::column_to_rownames(var='identificador') %>%
mutate_if(is.numeric, ~replace_na(.,0)) %>%
mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
mutate(fluidez=flui2 + flui3) %>%
mutate(elaboracion=elab1 + elab2 + elab3) %>%
mutate(flexibilidad=flex2 + flex3) %>%
mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
data.frame
??replace_na
 library(tidyr)
 library(stringr)
 library(tibble)
 library(dplyr)
 library(rmarkdown)
 torrance_csv_original <- read.csv('https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv')
torrance_totals <- torrance_csv_original %>%
remove_rownames %>% 
tibble::column_to_rownames(var='identificador') %>%
mutate_if(is.numeric, ~replace_na(.,0)) %>%
mutate(originalidad=orig1 + orig2_1 + orig2_2 + orig2_3 + orig2_4 + orig2_5 + orig2_6 + orig2_7 + orig2_8 + orig2_9 + orig2_10 + orig3) %>%
mutate(fluidez=flui2 + flui3) %>%
mutate(elaboracion=elab1 + elab2 + elab3) %>%
mutate(flexibilidad=flex2 + flex3) %>%
mutate(creatividad=originalidad + fluidez + elaboracion + flexibilidad) %>%
select(originalidad, fluidez, elaboracion, flexibilidad, creatividad) %>%
data.frame
pc_crea_median <- median(torrance_percentil$perc_creatividad)
torrance_groups_perc <- torrance_percentil %>%
mutate(median_grp = case_when(
perc_creatividad > pc_crea_median ~ 'g2above75',
TRUE ~ 'g1below75'
)) %>%
mutate(three_groups = case_when(
perc_creatividad <= 65 ~ 'g1bbibelow65',
perc_creatividad > 86 ~ 'g3above86',
TRUE 
~ 'g2mid66_85'
)) %>%
select(median_grp, three_groups)
#torrance_groups_perc$three_groups
torrance_groups_perc$median_grp
render('content/post/totales_corr_pares/index.Rmd')
render('content/post/variables_categoricas/index.Rmd')
render('content/post/correlaciones_por_pares/index.Rmd')
render('content/post/torrance_completo_temperamento/index.md')
render('content/post/torrance_completo_raven/index.md')
 library(rmarkdown)
 library(hugodown)
 library(dplyr)
 /home/vv/.vimrcNINNIOS QUE FALTAN
 setdiff(id_numbers_cbq, id_numbers_torrance)
 setdiff(id_numbers_torrance, id_numbers_cbq)
 setdiff(id_numbers_cbq, id_numbers_torrance)
 setdiff(id_numbers_torrance, id_numbers_cbq)
 rm(id_numbers_*)
 rm(id_numbers_cbq, id_numbers_raven, id_numbers_torrance)
 rm(id_numbers_cbq, id_numbers_raven, id_numbers_torrance)
 rm(id_numbers_cbq, id_numbers_raven, id_numbers_torrance)
 /home/vv/.vimrcNINNIOS QUE FALTAN
 setdiff(id_numbers_cbq, id_numbers_torrance)
 setdiff(id_numbers_cbq, id_numbers_torrance)
 setdiff(id_numbers_torrance, id_numbers_cbq)
 rm(id_numbers_cbq, id_numbers_raven, id_numbers_torrance)
iiiiii
 /home/vv/.vimrcNINNIOS QUE FALTAN
aaaaa aaaaa 
bbbbb
cccccccc
 endfu
 normaltmux send -t 1 endfu Enter 0je0
 endfu
 torrance_csv_original <- read.csv(https://github.com/Laboratorio-CHyC/Temperament/raw/main/torrance1_2022.csv)
source('https://github.com/umontano/fersearrano/raw/main/wrangling_datasets.R')
source('https://github.com/umontano/ferserrano/raw/main/wrangling_datasets.R')
source('https://github.com/umontano/ferserrano/raw/main/wrangling_datasets.R')
id_numbers_torrance
id_numbers_cbq
id_numbers_torrance
setdiff(id_numbers_cbq, id_numbers_torrance)
?source
source('https://github.com/umontano/ferserrano/raw/main/wrangling_datasets.R', echo = TRUE, print.eval = TRUE)
source('https://github.com/umontano/ferserrano/raw/main/wrangling_datasets.R', print.eval = TRUE)
source('https://github.com/umontano/ferserrano/raw/main/wrangling_datasets.R', echo = TRUE, print.eval = TRUE)
sum(sapply(items, function(x) sum(is.na(x))))
eeee <- read.csv('xCBQ_IMPUTED_ITEMS.csv', header = TRUE)
length(eeee$X)
sum(sapply(eeee, function(x) sum(is.na(x))))
head(eeee)
 names(eeee)
head(names(eeee))
head(names(eeee$X))
head(eeee$X)
eeee$X
'/a/CBQ_comandos_SPSS_lab_ChyC/CBQ_comandosSPSS_lab_CHyC.R'
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
cbq(mfs)
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
cbq
compute_scales_factors
cbq(mfs)

source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
cbq(mfs)
source('https://github.com/umontano/CBQ_comandos_SPSS_lab_ChyC/raw/main/CBQ_comandosSPSS_lab_CHyC.R', echo = TRUE, print.eval = TRUE)
cbq(mfs)
sum(sapply(items, function(x) sum(is.na(x))))
sapply(items, function(x) sum(is.na(x)))
